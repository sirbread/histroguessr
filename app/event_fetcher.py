import re
import random
import wikipedia
import mwparserfromhell
from bs4 import BeautifulSoup

# *these lists of events were generated by ai! sorry i'm not a history nerd
EVENTS = [
    "Chernobyl disaster",
    "Fall of the Berlin Wall",
    "Assassination of John F. Kennedy",
    "Sinking of the Titanic",
    "Storming of the Bastille",
    "9/11 attacks",
    "Great Fire of London",
    "Apollo 11",
    "Battle of Hastings",
    "Pearl Harbor",
    "American Declaration of Independence",
    "Rwandan genocide",
    "Columbine High School massacre",
    "Signing of the Magna Carta",
    "French Revolution"
]
# end genai shit

YEAR_PATTERN = re.compile(r'(?<!\d)(1[0-9]{3}|20[0-2][0-9]|2025)(?!\d)')
DATE_RANGE_PATTERN = re.compile(r'\b(1[0-9]{3}|20[0-2][0-9])\s*[-]\s*(1[0-9]{3}|20[0-2][0-9])\b')

def fetch_full_redacted_event():
    title = random.choice(EVENTS)
    try:
        page = wikipedia.page(title)
        html = page.html()
        soup = BeautifulSoup(html, "html.parser")
        
        tags_to_scan = soup.find_all(['p', 'li', 'span', 'td'])
        for tag in tags_to_scan:
            for sub in tag.find_all(text=True):
                if sub.parent.name not in ['script', 'style'] and len(sub.strip()) > 0:
                    redacted = YEAR_PATTERN.sub('', sub)
                    redacted = DATE_RANGE_PATTERN.sub('', redacted)
                    sub.replace_with(redacted)
        
        text_content = soup.get_text()
        match = YEAR_PATTERN.search(text_content)
        try:
            actual_year = int(match.group()) if match else None
        except:
            actual_year = None

        return {
            "title": title,
            "html": str(soup),
            "answer": actual_year
        }
    except Exception as e:
        print(f"[ERROR] Failed to load {title} -> {e}")
        return None

